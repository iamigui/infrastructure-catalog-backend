services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.111.0
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./bin/otel/otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - 4317:4317
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - ./bin/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:1.60
    ports:
      - 16686:16686
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin # Root username
      MONGO_INITDB_ROOT_PASSWORD: admin # Root password
    volumes:
      - mongo_data:/data/db
      - ./bin/mongodb/init.js:/docker-entrypoint-initdb.d/init.js # Initialize data
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network

volumes:
  postgres_data:
  mongo_data:
  grafana_data:

networks:
  app-network:
    driver: bridge
